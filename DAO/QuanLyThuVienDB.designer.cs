#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="THUVIEN")]
	public partial class QuanLyThuVienDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietMuon(ChiTietMuon instance);
    partial void UpdateChiTietMuon(ChiTietMuon instance);
    partial void DeleteChiTietMuon(ChiTietMuon instance);
    partial void InsertChiTietTinhTrangKhiTra(ChiTietTinhTrangKhiTra instance);
    partial void UpdateChiTietTinhTrangKhiTra(ChiTietTinhTrangKhiTra instance);
    partial void DeleteChiTietTinhTrangKhiTra(ChiTietTinhTrangKhiTra instance);
    partial void InsertDatMuonTaiLieu(DatMuonTaiLieu instance);
    partial void UpdateDatMuonTaiLieu(DatMuonTaiLieu instance);
    partial void DeleteDatMuonTaiLieu(DatMuonTaiLieu instance);
    partial void InsertDocGia(DocGia instance);
    partial void UpdateDocGia(DocGia instance);
    partial void DeleteDocGia(DocGia instance);
    partial void InsertLoaiTaiLieu(LoaiTaiLieu instance);
    partial void UpdateLoaiTaiLieu(LoaiTaiLieu instance);
    partial void DeleteLoaiTaiLieu(LoaiTaiLieu instance);
    partial void InsertLoaiTinhTrangKhiTra(LoaiTinhTrangKhiTra instance);
    partial void UpdateLoaiTinhTrangKhiTra(LoaiTinhTrangKhiTra instance);
    partial void DeleteLoaiTinhTrangKhiTra(LoaiTinhTrangKhiTra instance);
    partial void InsertPhieuMuon(PhieuMuon instance);
    partial void UpdatePhieuMuon(PhieuMuon instance);
    partial void DeletePhieuMuon(PhieuMuon instance);
    partial void InsertPhieuTra(PhieuTra instance);
    partial void UpdatePhieuTra(PhieuTra instance);
    partial void DeletePhieuTra(PhieuTra instance);
    partial void InsertTaiLieu(TaiLieu instance);
    partial void UpdateTaiLieu(TaiLieu instance);
    partial void DeleteTaiLieu(TaiLieu instance);
    partial void InsertTheDocGia(TheDocGia instance);
    partial void UpdateTheDocGia(TheDocGia instance);
    partial void DeleteTheDocGia(TheDocGia instance);
    partial void InsertThuThu(ThuThu instance);
    partial void UpdateThuThu(ThuThu instance);
    partial void DeleteThuThu(ThuThu instance);
    partial void InsertXacNhanHuyThe(XacNhanHuyThe instance);
    partial void UpdateXacNhanHuyThe(XacNhanHuyThe instance);
    partial void DeleteXacNhanHuyThe(XacNhanHuyThe instance);
    #endregion
		
		public QuanLyThuVienDBDataContext() : 
				base(global::DAO.Properties.Settings.Default.THUVIENConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyThuVienDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyThuVienDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyThuVienDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyThuVienDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietMuon> ChiTietMuons
		{
			get
			{
				return this.GetTable<ChiTietMuon>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietTinhTrangKhiTra> ChiTietTinhTrangKhiTras
		{
			get
			{
				return this.GetTable<ChiTietTinhTrangKhiTra>();
			}
		}
		
		public System.Data.Linq.Table<DatMuonTaiLieu> DatMuonTaiLieus
		{
			get
			{
				return this.GetTable<DatMuonTaiLieu>();
			}
		}
		
		public System.Data.Linq.Table<DocGia> DocGias
		{
			get
			{
				return this.GetTable<DocGia>();
			}
		}
		
		public System.Data.Linq.Table<LoaiTaiLieu> LoaiTaiLieus
		{
			get
			{
				return this.GetTable<LoaiTaiLieu>();
			}
		}
		
		public System.Data.Linq.Table<LoaiTinhTrangKhiTra> LoaiTinhTrangKhiTras
		{
			get
			{
				return this.GetTable<LoaiTinhTrangKhiTra>();
			}
		}
		
		public System.Data.Linq.Table<PhieuMuon> PhieuMuons
		{
			get
			{
				return this.GetTable<PhieuMuon>();
			}
		}
		
		public System.Data.Linq.Table<PhieuTra> PhieuTras
		{
			get
			{
				return this.GetTable<PhieuTra>();
			}
		}
		
		public System.Data.Linq.Table<TaiLieu> TaiLieus
		{
			get
			{
				return this.GetTable<TaiLieu>();
			}
		}
		
		public System.Data.Linq.Table<TheDocGia> TheDocGias
		{
			get
			{
				return this.GetTable<TheDocGia>();
			}
		}
		
		public System.Data.Linq.Table<ThuThu> ThuThus
		{
			get
			{
				return this.GetTable<ThuThu>();
			}
		}
		
		public System.Data.Linq.Table<XacNhanHuyThe> XacNhanHuyThes
		{
			get
			{
				return this.GetTable<XacNhanHuyThe>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietMuon")]
	public partial class ChiTietMuon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maChiTietMuon;
		
		private System.Nullable<int> _maPhieuMuon;
		
		private System.Nullable<int> _maTaiLieu;
		
		private EntitySet<ChiTietTinhTrangKhiTra> _ChiTietTinhTrangKhiTras;
		
		private EntityRef<PhieuMuon> _PhieuMuon;
		
		private EntityRef<TaiLieu> _TaiLieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaChiTietMuonChanging(int value);
    partial void OnmaChiTietMuonChanged();
    partial void OnmaPhieuMuonChanging(System.Nullable<int> value);
    partial void OnmaPhieuMuonChanged();
    partial void OnmaTaiLieuChanging(System.Nullable<int> value);
    partial void OnmaTaiLieuChanged();
    #endregion
		
		public ChiTietMuon()
		{
			this._ChiTietTinhTrangKhiTras = new EntitySet<ChiTietTinhTrangKhiTra>(new Action<ChiTietTinhTrangKhiTra>(this.attach_ChiTietTinhTrangKhiTras), new Action<ChiTietTinhTrangKhiTra>(this.detach_ChiTietTinhTrangKhiTras));
			this._PhieuMuon = default(EntityRef<PhieuMuon>);
			this._TaiLieu = default(EntityRef<TaiLieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maChiTietMuon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maChiTietMuon
		{
			get
			{
				return this._maChiTietMuon;
			}
			set
			{
				if ((this._maChiTietMuon != value))
				{
					this.OnmaChiTietMuonChanging(value);
					this.SendPropertyChanging();
					this._maChiTietMuon = value;
					this.SendPropertyChanged("maChiTietMuon");
					this.OnmaChiTietMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maPhieuMuon", DbType="Int")]
		public System.Nullable<int> maPhieuMuon
		{
			get
			{
				return this._maPhieuMuon;
			}
			set
			{
				if ((this._maPhieuMuon != value))
				{
					if (this._PhieuMuon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaPhieuMuonChanging(value);
					this.SendPropertyChanging();
					this._maPhieuMuon = value;
					this.SendPropertyChanged("maPhieuMuon");
					this.OnmaPhieuMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maTaiLieu", DbType="Int")]
		public System.Nullable<int> maTaiLieu
		{
			get
			{
				return this._maTaiLieu;
			}
			set
			{
				if ((this._maTaiLieu != value))
				{
					if (this._TaiLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaTaiLieuChanging(value);
					this.SendPropertyChanging();
					this._maTaiLieu = value;
					this.SendPropertyChanged("maTaiLieu");
					this.OnmaTaiLieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiTietMuon_ChiTietTinhTrangKhiTra", Storage="_ChiTietTinhTrangKhiTras", ThisKey="maChiTietMuon", OtherKey="maChiTietMuon")]
		public EntitySet<ChiTietTinhTrangKhiTra> ChiTietTinhTrangKhiTras
		{
			get
			{
				return this._ChiTietTinhTrangKhiTras;
			}
			set
			{
				this._ChiTietTinhTrangKhiTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuMuon_ChiTietMuon", Storage="_PhieuMuon", ThisKey="maPhieuMuon", OtherKey="maPhieuMuon", IsForeignKey=true)]
		public PhieuMuon PhieuMuon
		{
			get
			{
				return this._PhieuMuon.Entity;
			}
			set
			{
				PhieuMuon previousValue = this._PhieuMuon.Entity;
				if (((previousValue != value) 
							|| (this._PhieuMuon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuMuon.Entity = null;
						previousValue.ChiTietMuons.Remove(this);
					}
					this._PhieuMuon.Entity = value;
					if ((value != null))
					{
						value.ChiTietMuons.Add(this);
						this._maPhieuMuon = value.maPhieuMuon;
					}
					else
					{
						this._maPhieuMuon = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhieuMuon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiLieu_ChiTietMuon", Storage="_TaiLieu", ThisKey="maTaiLieu", OtherKey="maTaiLieu", IsForeignKey=true)]
		public TaiLieu TaiLieu
		{
			get
			{
				return this._TaiLieu.Entity;
			}
			set
			{
				TaiLieu previousValue = this._TaiLieu.Entity;
				if (((previousValue != value) 
							|| (this._TaiLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiLieu.Entity = null;
						previousValue.ChiTietMuons.Remove(this);
					}
					this._TaiLieu.Entity = value;
					if ((value != null))
					{
						value.ChiTietMuons.Add(this);
						this._maTaiLieu = value.maTaiLieu;
					}
					else
					{
						this._maTaiLieu = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiLieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietTinhTrangKhiTras(ChiTietTinhTrangKhiTra entity)
		{
			this.SendPropertyChanging();
			entity.ChiTietMuon = this;
		}
		
		private void detach_ChiTietTinhTrangKhiTras(ChiTietTinhTrangKhiTra entity)
		{
			this.SendPropertyChanging();
			entity.ChiTietMuon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietTinhTrangKhiTra")]
	public partial class ChiTietTinhTrangKhiTra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maPhieuTra;
		
		private int _maChiTietMuon;
		
		private int _maLoaiTinhTrang;
		
		private EntityRef<ChiTietMuon> _ChiTietMuon;
		
		private EntityRef<LoaiTinhTrangKhiTra> _LoaiTinhTrangKhiTra;
		
		private EntityRef<PhieuTra> _PhieuTra;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaPhieuTraChanging(int value);
    partial void OnmaPhieuTraChanged();
    partial void OnmaChiTietMuonChanging(int value);
    partial void OnmaChiTietMuonChanged();
    partial void OnmaLoaiTinhTrangChanging(int value);
    partial void OnmaLoaiTinhTrangChanged();
    #endregion
		
		public ChiTietTinhTrangKhiTra()
		{
			this._ChiTietMuon = default(EntityRef<ChiTietMuon>);
			this._LoaiTinhTrangKhiTra = default(EntityRef<LoaiTinhTrangKhiTra>);
			this._PhieuTra = default(EntityRef<PhieuTra>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maPhieuTra", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maPhieuTra
		{
			get
			{
				return this._maPhieuTra;
			}
			set
			{
				if ((this._maPhieuTra != value))
				{
					if (this._PhieuTra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaPhieuTraChanging(value);
					this.SendPropertyChanging();
					this._maPhieuTra = value;
					this.SendPropertyChanged("maPhieuTra");
					this.OnmaPhieuTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maChiTietMuon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maChiTietMuon
		{
			get
			{
				return this._maChiTietMuon;
			}
			set
			{
				if ((this._maChiTietMuon != value))
				{
					if (this._ChiTietMuon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaChiTietMuonChanging(value);
					this.SendPropertyChanging();
					this._maChiTietMuon = value;
					this.SendPropertyChanged("maChiTietMuon");
					this.OnmaChiTietMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLoaiTinhTrang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maLoaiTinhTrang
		{
			get
			{
				return this._maLoaiTinhTrang;
			}
			set
			{
				if ((this._maLoaiTinhTrang != value))
				{
					if (this._LoaiTinhTrangKhiTra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaLoaiTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._maLoaiTinhTrang = value;
					this.SendPropertyChanged("maLoaiTinhTrang");
					this.OnmaLoaiTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiTietMuon_ChiTietTinhTrangKhiTra", Storage="_ChiTietMuon", ThisKey="maChiTietMuon", OtherKey="maChiTietMuon", IsForeignKey=true)]
		public ChiTietMuon ChiTietMuon
		{
			get
			{
				return this._ChiTietMuon.Entity;
			}
			set
			{
				ChiTietMuon previousValue = this._ChiTietMuon.Entity;
				if (((previousValue != value) 
							|| (this._ChiTietMuon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChiTietMuon.Entity = null;
						previousValue.ChiTietTinhTrangKhiTras.Remove(this);
					}
					this._ChiTietMuon.Entity = value;
					if ((value != null))
					{
						value.ChiTietTinhTrangKhiTras.Add(this);
						this._maChiTietMuon = value.maChiTietMuon;
					}
					else
					{
						this._maChiTietMuon = default(int);
					}
					this.SendPropertyChanged("ChiTietMuon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTinhTrangKhiTra_ChiTietTinhTrangKhiTra", Storage="_LoaiTinhTrangKhiTra", ThisKey="maLoaiTinhTrang", OtherKey="maLoaiTinhTrang", IsForeignKey=true)]
		public LoaiTinhTrangKhiTra LoaiTinhTrangKhiTra
		{
			get
			{
				return this._LoaiTinhTrangKhiTra.Entity;
			}
			set
			{
				LoaiTinhTrangKhiTra previousValue = this._LoaiTinhTrangKhiTra.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTinhTrangKhiTra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTinhTrangKhiTra.Entity = null;
						previousValue.ChiTietTinhTrangKhiTras.Remove(this);
					}
					this._LoaiTinhTrangKhiTra.Entity = value;
					if ((value != null))
					{
						value.ChiTietTinhTrangKhiTras.Add(this);
						this._maLoaiTinhTrang = value.maLoaiTinhTrang;
					}
					else
					{
						this._maLoaiTinhTrang = default(int);
					}
					this.SendPropertyChanged("LoaiTinhTrangKhiTra");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuTra_ChiTietTinhTrangKhiTra", Storage="_PhieuTra", ThisKey="maPhieuTra", OtherKey="maPhieuTra", IsForeignKey=true)]
		public PhieuTra PhieuTra
		{
			get
			{
				return this._PhieuTra.Entity;
			}
			set
			{
				PhieuTra previousValue = this._PhieuTra.Entity;
				if (((previousValue != value) 
							|| (this._PhieuTra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuTra.Entity = null;
						previousValue.ChiTietTinhTrangKhiTras.Remove(this);
					}
					this._PhieuTra.Entity = value;
					if ((value != null))
					{
						value.ChiTietTinhTrangKhiTras.Add(this);
						this._maPhieuTra = value.maPhieuTra;
					}
					else
					{
						this._maPhieuTra = default(int);
					}
					this.SendPropertyChanged("PhieuTra");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatMuonTaiLieu")]
	public partial class DatMuonTaiLieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maDatMuon;
		
		private System.Nullable<int> _maTaiLieu;
		
		private System.Nullable<System.DateTime> _ngayDatMuon;
		
		private System.Nullable<bool> _hide;
		
		private EntityRef<TaiLieu> _TaiLieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaDatMuonChanging(int value);
    partial void OnmaDatMuonChanged();
    partial void OnmaTaiLieuChanging(System.Nullable<int> value);
    partial void OnmaTaiLieuChanged();
    partial void OnngayDatMuonChanging(System.Nullable<System.DateTime> value);
    partial void OnngayDatMuonChanged();
    partial void OnhideChanging(System.Nullable<bool> value);
    partial void OnhideChanged();
    #endregion
		
		public DatMuonTaiLieu()
		{
			this._TaiLieu = default(EntityRef<TaiLieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDatMuon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maDatMuon
		{
			get
			{
				return this._maDatMuon;
			}
			set
			{
				if ((this._maDatMuon != value))
				{
					this.OnmaDatMuonChanging(value);
					this.SendPropertyChanging();
					this._maDatMuon = value;
					this.SendPropertyChanged("maDatMuon");
					this.OnmaDatMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maTaiLieu", DbType="Int")]
		public System.Nullable<int> maTaiLieu
		{
			get
			{
				return this._maTaiLieu;
			}
			set
			{
				if ((this._maTaiLieu != value))
				{
					if (this._TaiLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaTaiLieuChanging(value);
					this.SendPropertyChanging();
					this._maTaiLieu = value;
					this.SendPropertyChanged("maTaiLieu");
					this.OnmaTaiLieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayDatMuon", DbType="Date")]
		public System.Nullable<System.DateTime> ngayDatMuon
		{
			get
			{
				return this._ngayDatMuon;
			}
			set
			{
				if ((this._ngayDatMuon != value))
				{
					this.OnngayDatMuonChanging(value);
					this.SendPropertyChanging();
					this._ngayDatMuon = value;
					this.SendPropertyChanged("ngayDatMuon");
					this.OnngayDatMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hide", DbType="Bit")]
		public System.Nullable<bool> hide
		{
			get
			{
				return this._hide;
			}
			set
			{
				if ((this._hide != value))
				{
					this.OnhideChanging(value);
					this.SendPropertyChanging();
					this._hide = value;
					this.SendPropertyChanged("hide");
					this.OnhideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiLieu_DatMuonTaiLieu", Storage="_TaiLieu", ThisKey="maTaiLieu", OtherKey="maTaiLieu", IsForeignKey=true)]
		public TaiLieu TaiLieu
		{
			get
			{
				return this._TaiLieu.Entity;
			}
			set
			{
				TaiLieu previousValue = this._TaiLieu.Entity;
				if (((previousValue != value) 
							|| (this._TaiLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiLieu.Entity = null;
						previousValue.DatMuonTaiLieus.Remove(this);
					}
					this._TaiLieu.Entity = value;
					if ((value != null))
					{
						value.DatMuonTaiLieus.Add(this);
						this._maTaiLieu = value.maTaiLieu;
					}
					else
					{
						this._maTaiLieu = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiLieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocGia")]
	public partial class DocGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maDocGia;
		
		private string _tenDocGia;
		
		private System.Nullable<System.DateTime> _ngaySinh;
		
		private decimal _cmnd;
		
		private System.Nullable<bool> _hide;
		
		private EntitySet<PhieuMuon> _PhieuMuons;
		
		private EntityRef<TheDocGia> _TheDocGia;
		
		private EntityRef<XacNhanHuyThe> _XacNhanHuyThe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaDocGiaChanging(int value);
    partial void OnmaDocGiaChanged();
    partial void OntenDocGiaChanging(string value);
    partial void OntenDocGiaChanged();
    partial void OnngaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnngaySinhChanged();
    partial void OncmndChanging(decimal value);
    partial void OncmndChanged();
    partial void OnhideChanging(System.Nullable<bool> value);
    partial void OnhideChanged();
    #endregion
		
		public DocGia()
		{
			this._PhieuMuons = new EntitySet<PhieuMuon>(new Action<PhieuMuon>(this.attach_PhieuMuons), new Action<PhieuMuon>(this.detach_PhieuMuons));
			this._TheDocGia = default(EntityRef<TheDocGia>);
			this._XacNhanHuyThe = default(EntityRef<XacNhanHuyThe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDocGia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maDocGia
		{
			get
			{
				return this._maDocGia;
			}
			set
			{
				if ((this._maDocGia != value))
				{
					this.OnmaDocGiaChanging(value);
					this.SendPropertyChanging();
					this._maDocGia = value;
					this.SendPropertyChanged("maDocGia");
					this.OnmaDocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenDocGia", DbType="NVarChar(250)")]
		public string tenDocGia
		{
			get
			{
				return this._tenDocGia;
			}
			set
			{
				if ((this._tenDocGia != value))
				{
					this.OntenDocGiaChanging(value);
					this.SendPropertyChanging();
					this._tenDocGia = value;
					this.SendPropertyChanged("tenDocGia");
					this.OntenDocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> ngaySinh
		{
			get
			{
				return this._ngaySinh;
			}
			set
			{
				if ((this._ngaySinh != value))
				{
					this.OnngaySinhChanging(value);
					this.SendPropertyChanging();
					this._ngaySinh = value;
					this.SendPropertyChanged("ngaySinh");
					this.OnngaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmnd", DbType="Decimal(18,0) NOT NULL")]
		public decimal cmnd
		{
			get
			{
				return this._cmnd;
			}
			set
			{
				if ((this._cmnd != value))
				{
					this.OncmndChanging(value);
					this.SendPropertyChanging();
					this._cmnd = value;
					this.SendPropertyChanged("cmnd");
					this.OncmndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hide", DbType="Bit")]
		public System.Nullable<bool> hide
		{
			get
			{
				return this._hide;
			}
			set
			{
				if ((this._hide != value))
				{
					this.OnhideChanging(value);
					this.SendPropertyChanging();
					this._hide = value;
					this.SendPropertyChanged("hide");
					this.OnhideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocGia_PhieuMuon", Storage="_PhieuMuons", ThisKey="maDocGia", OtherKey="maDocGia")]
		public EntitySet<PhieuMuon> PhieuMuons
		{
			get
			{
				return this._PhieuMuons;
			}
			set
			{
				this._PhieuMuons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocGia_TheDocGia", Storage="_TheDocGia", ThisKey="maDocGia", OtherKey="maDocGia", IsUnique=true, IsForeignKey=false)]
		public TheDocGia TheDocGia
		{
			get
			{
				return this._TheDocGia.Entity;
			}
			set
			{
				TheDocGia previousValue = this._TheDocGia.Entity;
				if (((previousValue != value) 
							|| (this._TheDocGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheDocGia.Entity = null;
						previousValue.DocGia = null;
					}
					this._TheDocGia.Entity = value;
					if ((value != null))
					{
						value.DocGia = this;
					}
					this.SendPropertyChanged("TheDocGia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocGia_XacNhanHuyThe", Storage="_XacNhanHuyThe", ThisKey="maDocGia", OtherKey="maDocGia", IsUnique=true, IsForeignKey=false)]
		public XacNhanHuyThe XacNhanHuyThe
		{
			get
			{
				return this._XacNhanHuyThe.Entity;
			}
			set
			{
				XacNhanHuyThe previousValue = this._XacNhanHuyThe.Entity;
				if (((previousValue != value) 
							|| (this._XacNhanHuyThe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XacNhanHuyThe.Entity = null;
						previousValue.DocGia = null;
					}
					this._XacNhanHuyThe.Entity = value;
					if ((value != null))
					{
						value.DocGia = this;
					}
					this.SendPropertyChanged("XacNhanHuyThe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.DocGia = this;
		}
		
		private void detach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.DocGia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiTaiLieu")]
	public partial class LoaiTaiLieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maLoaiTaiLieu;
		
		private string _tenLoai;
		
		private EntitySet<TaiLieu> _TaiLieus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaLoaiTaiLieuChanging(int value);
    partial void OnmaLoaiTaiLieuChanged();
    partial void OntenLoaiChanging(string value);
    partial void OntenLoaiChanged();
    #endregion
		
		public LoaiTaiLieu()
		{
			this._TaiLieus = new EntitySet<TaiLieu>(new Action<TaiLieu>(this.attach_TaiLieus), new Action<TaiLieu>(this.detach_TaiLieus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLoaiTaiLieu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maLoaiTaiLieu
		{
			get
			{
				return this._maLoaiTaiLieu;
			}
			set
			{
				if ((this._maLoaiTaiLieu != value))
				{
					this.OnmaLoaiTaiLieuChanging(value);
					this.SendPropertyChanging();
					this._maLoaiTaiLieu = value;
					this.SendPropertyChanged("maLoaiTaiLieu");
					this.OnmaLoaiTaiLieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenLoai", DbType="NVarChar(250)")]
		public string tenLoai
		{
			get
			{
				return this._tenLoai;
			}
			set
			{
				if ((this._tenLoai != value))
				{
					this.OntenLoaiChanging(value);
					this.SendPropertyChanging();
					this._tenLoai = value;
					this.SendPropertyChanged("tenLoai");
					this.OntenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTaiLieu_TaiLieu", Storage="_TaiLieus", ThisKey="maLoaiTaiLieu", OtherKey="maLoaiTaiLieu")]
		public EntitySet<TaiLieu> TaiLieus
		{
			get
			{
				return this._TaiLieus;
			}
			set
			{
				this._TaiLieus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiLieus(TaiLieu entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTaiLieu = this;
		}
		
		private void detach_TaiLieus(TaiLieu entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTaiLieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiTinhTrangKhiTra")]
	public partial class LoaiTinhTrangKhiTra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maLoaiTinhTrang;
		
		private string _tenLoaiTinhTrang;
		
		private EntitySet<ChiTietTinhTrangKhiTra> _ChiTietTinhTrangKhiTras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaLoaiTinhTrangChanging(int value);
    partial void OnmaLoaiTinhTrangChanged();
    partial void OntenLoaiTinhTrangChanging(string value);
    partial void OntenLoaiTinhTrangChanged();
    #endregion
		
		public LoaiTinhTrangKhiTra()
		{
			this._ChiTietTinhTrangKhiTras = new EntitySet<ChiTietTinhTrangKhiTra>(new Action<ChiTietTinhTrangKhiTra>(this.attach_ChiTietTinhTrangKhiTras), new Action<ChiTietTinhTrangKhiTra>(this.detach_ChiTietTinhTrangKhiTras));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLoaiTinhTrang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maLoaiTinhTrang
		{
			get
			{
				return this._maLoaiTinhTrang;
			}
			set
			{
				if ((this._maLoaiTinhTrang != value))
				{
					this.OnmaLoaiTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._maLoaiTinhTrang = value;
					this.SendPropertyChanged("maLoaiTinhTrang");
					this.OnmaLoaiTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenLoaiTinhTrang", DbType="NVarChar(250)")]
		public string tenLoaiTinhTrang
		{
			get
			{
				return this._tenLoaiTinhTrang;
			}
			set
			{
				if ((this._tenLoaiTinhTrang != value))
				{
					this.OntenLoaiTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._tenLoaiTinhTrang = value;
					this.SendPropertyChanged("tenLoaiTinhTrang");
					this.OntenLoaiTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTinhTrangKhiTra_ChiTietTinhTrangKhiTra", Storage="_ChiTietTinhTrangKhiTras", ThisKey="maLoaiTinhTrang", OtherKey="maLoaiTinhTrang")]
		public EntitySet<ChiTietTinhTrangKhiTra> ChiTietTinhTrangKhiTras
		{
			get
			{
				return this._ChiTietTinhTrangKhiTras;
			}
			set
			{
				this._ChiTietTinhTrangKhiTras.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietTinhTrangKhiTras(ChiTietTinhTrangKhiTra entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTinhTrangKhiTra = this;
		}
		
		private void detach_ChiTietTinhTrangKhiTras(ChiTietTinhTrangKhiTra entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTinhTrangKhiTra = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuMuon")]
	public partial class PhieuMuon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maPhieuMuon;
		
		private System.Nullable<int> _maDocGia;
		
		private System.Nullable<int> _maThuThu;
		
		private System.Nullable<System.DateTime> _ngayMuon;
		
		private System.Nullable<System.DateTime> _ngayHetHan;
		
		private EntitySet<ChiTietMuon> _ChiTietMuons;
		
		private EntitySet<PhieuTra> _PhieuTras;
		
		private EntityRef<DocGia> _DocGia;
		
		private EntityRef<ThuThu> _ThuThu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaPhieuMuonChanging(int value);
    partial void OnmaPhieuMuonChanged();
    partial void OnmaDocGiaChanging(System.Nullable<int> value);
    partial void OnmaDocGiaChanged();
    partial void OnmaThuThuChanging(System.Nullable<int> value);
    partial void OnmaThuThuChanged();
    partial void OnngayMuonChanging(System.Nullable<System.DateTime> value);
    partial void OnngayMuonChanged();
    partial void OnngayHetHanChanging(System.Nullable<System.DateTime> value);
    partial void OnngayHetHanChanged();
    #endregion
		
		public PhieuMuon()
		{
			this._ChiTietMuons = new EntitySet<ChiTietMuon>(new Action<ChiTietMuon>(this.attach_ChiTietMuons), new Action<ChiTietMuon>(this.detach_ChiTietMuons));
			this._PhieuTras = new EntitySet<PhieuTra>(new Action<PhieuTra>(this.attach_PhieuTras), new Action<PhieuTra>(this.detach_PhieuTras));
			this._DocGia = default(EntityRef<DocGia>);
			this._ThuThu = default(EntityRef<ThuThu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maPhieuMuon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maPhieuMuon
		{
			get
			{
				return this._maPhieuMuon;
			}
			set
			{
				if ((this._maPhieuMuon != value))
				{
					this.OnmaPhieuMuonChanging(value);
					this.SendPropertyChanging();
					this._maPhieuMuon = value;
					this.SendPropertyChanged("maPhieuMuon");
					this.OnmaPhieuMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDocGia", DbType="Int")]
		public System.Nullable<int> maDocGia
		{
			get
			{
				return this._maDocGia;
			}
			set
			{
				if ((this._maDocGia != value))
				{
					if (this._DocGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaDocGiaChanging(value);
					this.SendPropertyChanging();
					this._maDocGia = value;
					this.SendPropertyChanged("maDocGia");
					this.OnmaDocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maThuThu", DbType="Int")]
		public System.Nullable<int> maThuThu
		{
			get
			{
				return this._maThuThu;
			}
			set
			{
				if ((this._maThuThu != value))
				{
					if (this._ThuThu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaThuThuChanging(value);
					this.SendPropertyChanging();
					this._maThuThu = value;
					this.SendPropertyChanged("maThuThu");
					this.OnmaThuThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayMuon", DbType="Date")]
		public System.Nullable<System.DateTime> ngayMuon
		{
			get
			{
				return this._ngayMuon;
			}
			set
			{
				if ((this._ngayMuon != value))
				{
					this.OnngayMuonChanging(value);
					this.SendPropertyChanging();
					this._ngayMuon = value;
					this.SendPropertyChanged("ngayMuon");
					this.OnngayMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayHetHan", DbType="Date")]
		public System.Nullable<System.DateTime> ngayHetHan
		{
			get
			{
				return this._ngayHetHan;
			}
			set
			{
				if ((this._ngayHetHan != value))
				{
					this.OnngayHetHanChanging(value);
					this.SendPropertyChanging();
					this._ngayHetHan = value;
					this.SendPropertyChanged("ngayHetHan");
					this.OnngayHetHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuMuon_ChiTietMuon", Storage="_ChiTietMuons", ThisKey="maPhieuMuon", OtherKey="maPhieuMuon")]
		public EntitySet<ChiTietMuon> ChiTietMuons
		{
			get
			{
				return this._ChiTietMuons;
			}
			set
			{
				this._ChiTietMuons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuMuon_PhieuTra", Storage="_PhieuTras", ThisKey="maPhieuMuon", OtherKey="maPhieumuon")]
		public EntitySet<PhieuTra> PhieuTras
		{
			get
			{
				return this._PhieuTras;
			}
			set
			{
				this._PhieuTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocGia_PhieuMuon", Storage="_DocGia", ThisKey="maDocGia", OtherKey="maDocGia", IsForeignKey=true)]
		public DocGia DocGia
		{
			get
			{
				return this._DocGia.Entity;
			}
			set
			{
				DocGia previousValue = this._DocGia.Entity;
				if (((previousValue != value) 
							|| (this._DocGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocGia.Entity = null;
						previousValue.PhieuMuons.Remove(this);
					}
					this._DocGia.Entity = value;
					if ((value != null))
					{
						value.PhieuMuons.Add(this);
						this._maDocGia = value.maDocGia;
					}
					else
					{
						this._maDocGia = default(Nullable<int>);
					}
					this.SendPropertyChanged("DocGia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuThu_PhieuMuon", Storage="_ThuThu", ThisKey="maThuThu", OtherKey="maThuThu", IsForeignKey=true)]
		public ThuThu ThuThu
		{
			get
			{
				return this._ThuThu.Entity;
			}
			set
			{
				ThuThu previousValue = this._ThuThu.Entity;
				if (((previousValue != value) 
							|| (this._ThuThu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuThu.Entity = null;
						previousValue.PhieuMuons.Remove(this);
					}
					this._ThuThu.Entity = value;
					if ((value != null))
					{
						value.PhieuMuons.Add(this);
						this._maThuThu = value.maThuThu;
					}
					else
					{
						this._maThuThu = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThuThu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietMuons(ChiTietMuon entity)
		{
			this.SendPropertyChanging();
			entity.PhieuMuon = this;
		}
		
		private void detach_ChiTietMuons(ChiTietMuon entity)
		{
			this.SendPropertyChanging();
			entity.PhieuMuon = null;
		}
		
		private void attach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.PhieuMuon = this;
		}
		
		private void detach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.PhieuMuon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuTra")]
	public partial class PhieuTra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maPhieuTra;
		
		private System.Nullable<int> _maPhieumuon;
		
		private System.Nullable<int> _maThuThu;
		
		private System.Nullable<System.DateTime> _ngayTra;
		
		private EntitySet<ChiTietTinhTrangKhiTra> _ChiTietTinhTrangKhiTras;
		
		private EntityRef<PhieuMuon> _PhieuMuon;
		
		private EntityRef<ThuThu> _ThuThu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaPhieuTraChanging(int value);
    partial void OnmaPhieuTraChanged();
    partial void OnmaPhieumuonChanging(System.Nullable<int> value);
    partial void OnmaPhieumuonChanged();
    partial void OnmaThuThuChanging(System.Nullable<int> value);
    partial void OnmaThuThuChanged();
    partial void OnngayTraChanging(System.Nullable<System.DateTime> value);
    partial void OnngayTraChanged();
    #endregion
		
		public PhieuTra()
		{
			this._ChiTietTinhTrangKhiTras = new EntitySet<ChiTietTinhTrangKhiTra>(new Action<ChiTietTinhTrangKhiTra>(this.attach_ChiTietTinhTrangKhiTras), new Action<ChiTietTinhTrangKhiTra>(this.detach_ChiTietTinhTrangKhiTras));
			this._PhieuMuon = default(EntityRef<PhieuMuon>);
			this._ThuThu = default(EntityRef<ThuThu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maPhieuTra", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maPhieuTra
		{
			get
			{
				return this._maPhieuTra;
			}
			set
			{
				if ((this._maPhieuTra != value))
				{
					this.OnmaPhieuTraChanging(value);
					this.SendPropertyChanging();
					this._maPhieuTra = value;
					this.SendPropertyChanged("maPhieuTra");
					this.OnmaPhieuTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maPhieumuon", DbType="Int")]
		public System.Nullable<int> maPhieumuon
		{
			get
			{
				return this._maPhieumuon;
			}
			set
			{
				if ((this._maPhieumuon != value))
				{
					if (this._PhieuMuon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaPhieumuonChanging(value);
					this.SendPropertyChanging();
					this._maPhieumuon = value;
					this.SendPropertyChanged("maPhieumuon");
					this.OnmaPhieumuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maThuThu", DbType="Int")]
		public System.Nullable<int> maThuThu
		{
			get
			{
				return this._maThuThu;
			}
			set
			{
				if ((this._maThuThu != value))
				{
					if (this._ThuThu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaThuThuChanging(value);
					this.SendPropertyChanging();
					this._maThuThu = value;
					this.SendPropertyChanged("maThuThu");
					this.OnmaThuThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayTra", DbType="Date")]
		public System.Nullable<System.DateTime> ngayTra
		{
			get
			{
				return this._ngayTra;
			}
			set
			{
				if ((this._ngayTra != value))
				{
					this.OnngayTraChanging(value);
					this.SendPropertyChanging();
					this._ngayTra = value;
					this.SendPropertyChanged("ngayTra");
					this.OnngayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuTra_ChiTietTinhTrangKhiTra", Storage="_ChiTietTinhTrangKhiTras", ThisKey="maPhieuTra", OtherKey="maPhieuTra")]
		public EntitySet<ChiTietTinhTrangKhiTra> ChiTietTinhTrangKhiTras
		{
			get
			{
				return this._ChiTietTinhTrangKhiTras;
			}
			set
			{
				this._ChiTietTinhTrangKhiTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuMuon_PhieuTra", Storage="_PhieuMuon", ThisKey="maPhieumuon", OtherKey="maPhieuMuon", IsForeignKey=true)]
		public PhieuMuon PhieuMuon
		{
			get
			{
				return this._PhieuMuon.Entity;
			}
			set
			{
				PhieuMuon previousValue = this._PhieuMuon.Entity;
				if (((previousValue != value) 
							|| (this._PhieuMuon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuMuon.Entity = null;
						previousValue.PhieuTras.Remove(this);
					}
					this._PhieuMuon.Entity = value;
					if ((value != null))
					{
						value.PhieuTras.Add(this);
						this._maPhieumuon = value.maPhieuMuon;
					}
					else
					{
						this._maPhieumuon = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhieuMuon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuThu_PhieuTra", Storage="_ThuThu", ThisKey="maThuThu", OtherKey="maThuThu", IsForeignKey=true)]
		public ThuThu ThuThu
		{
			get
			{
				return this._ThuThu.Entity;
			}
			set
			{
				ThuThu previousValue = this._ThuThu.Entity;
				if (((previousValue != value) 
							|| (this._ThuThu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuThu.Entity = null;
						previousValue.PhieuTras.Remove(this);
					}
					this._ThuThu.Entity = value;
					if ((value != null))
					{
						value.PhieuTras.Add(this);
						this._maThuThu = value.maThuThu;
					}
					else
					{
						this._maThuThu = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThuThu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietTinhTrangKhiTras(ChiTietTinhTrangKhiTra entity)
		{
			this.SendPropertyChanging();
			entity.PhieuTra = this;
		}
		
		private void detach_ChiTietTinhTrangKhiTras(ChiTietTinhTrangKhiTra entity)
		{
			this.SendPropertyChanging();
			entity.PhieuTra = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiLieu")]
	public partial class TaiLieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maTaiLieu;
		
		private System.Nullable<int> _maLoaiTaiLieu;
		
		private string _tenTaiLieu;
		
		private System.Nullable<bool> _hide;
		
		private EntitySet<ChiTietMuon> _ChiTietMuons;
		
		private EntitySet<DatMuonTaiLieu> _DatMuonTaiLieus;
		
		private EntityRef<LoaiTaiLieu> _LoaiTaiLieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaTaiLieuChanging(int value);
    partial void OnmaTaiLieuChanged();
    partial void OnmaLoaiTaiLieuChanging(System.Nullable<int> value);
    partial void OnmaLoaiTaiLieuChanged();
    partial void OntenTaiLieuChanging(string value);
    partial void OntenTaiLieuChanged();
    partial void OnhideChanging(System.Nullable<bool> value);
    partial void OnhideChanged();
    #endregion
		
		public TaiLieu()
		{
			this._ChiTietMuons = new EntitySet<ChiTietMuon>(new Action<ChiTietMuon>(this.attach_ChiTietMuons), new Action<ChiTietMuon>(this.detach_ChiTietMuons));
			this._DatMuonTaiLieus = new EntitySet<DatMuonTaiLieu>(new Action<DatMuonTaiLieu>(this.attach_DatMuonTaiLieus), new Action<DatMuonTaiLieu>(this.detach_DatMuonTaiLieus));
			this._LoaiTaiLieu = default(EntityRef<LoaiTaiLieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maTaiLieu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maTaiLieu
		{
			get
			{
				return this._maTaiLieu;
			}
			set
			{
				if ((this._maTaiLieu != value))
				{
					this.OnmaTaiLieuChanging(value);
					this.SendPropertyChanging();
					this._maTaiLieu = value;
					this.SendPropertyChanged("maTaiLieu");
					this.OnmaTaiLieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLoaiTaiLieu", DbType="Int")]
		public System.Nullable<int> maLoaiTaiLieu
		{
			get
			{
				return this._maLoaiTaiLieu;
			}
			set
			{
				if ((this._maLoaiTaiLieu != value))
				{
					if (this._LoaiTaiLieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaLoaiTaiLieuChanging(value);
					this.SendPropertyChanging();
					this._maLoaiTaiLieu = value;
					this.SendPropertyChanged("maLoaiTaiLieu");
					this.OnmaLoaiTaiLieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenTaiLieu", DbType="NVarChar(250)")]
		public string tenTaiLieu
		{
			get
			{
				return this._tenTaiLieu;
			}
			set
			{
				if ((this._tenTaiLieu != value))
				{
					this.OntenTaiLieuChanging(value);
					this.SendPropertyChanging();
					this._tenTaiLieu = value;
					this.SendPropertyChanged("tenTaiLieu");
					this.OntenTaiLieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hide", DbType="Bit")]
		public System.Nullable<bool> hide
		{
			get
			{
				return this._hide;
			}
			set
			{
				if ((this._hide != value))
				{
					this.OnhideChanging(value);
					this.SendPropertyChanging();
					this._hide = value;
					this.SendPropertyChanged("hide");
					this.OnhideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiLieu_ChiTietMuon", Storage="_ChiTietMuons", ThisKey="maTaiLieu", OtherKey="maTaiLieu")]
		public EntitySet<ChiTietMuon> ChiTietMuons
		{
			get
			{
				return this._ChiTietMuons;
			}
			set
			{
				this._ChiTietMuons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiLieu_DatMuonTaiLieu", Storage="_DatMuonTaiLieus", ThisKey="maTaiLieu", OtherKey="maTaiLieu")]
		public EntitySet<DatMuonTaiLieu> DatMuonTaiLieus
		{
			get
			{
				return this._DatMuonTaiLieus;
			}
			set
			{
				this._DatMuonTaiLieus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTaiLieu_TaiLieu", Storage="_LoaiTaiLieu", ThisKey="maLoaiTaiLieu", OtherKey="maLoaiTaiLieu", IsForeignKey=true)]
		public LoaiTaiLieu LoaiTaiLieu
		{
			get
			{
				return this._LoaiTaiLieu.Entity;
			}
			set
			{
				LoaiTaiLieu previousValue = this._LoaiTaiLieu.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTaiLieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTaiLieu.Entity = null;
						previousValue.TaiLieus.Remove(this);
					}
					this._LoaiTaiLieu.Entity = value;
					if ((value != null))
					{
						value.TaiLieus.Add(this);
						this._maLoaiTaiLieu = value.maLoaiTaiLieu;
					}
					else
					{
						this._maLoaiTaiLieu = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiTaiLieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietMuons(ChiTietMuon entity)
		{
			this.SendPropertyChanging();
			entity.TaiLieu = this;
		}
		
		private void detach_ChiTietMuons(ChiTietMuon entity)
		{
			this.SendPropertyChanging();
			entity.TaiLieu = null;
		}
		
		private void attach_DatMuonTaiLieus(DatMuonTaiLieu entity)
		{
			this.SendPropertyChanging();
			entity.TaiLieu = this;
		}
		
		private void detach_DatMuonTaiLieus(DatMuonTaiLieu entity)
		{
			this.SendPropertyChanging();
			entity.TaiLieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheDocGia")]
	public partial class TheDocGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maDocGia;
		
		private System.Nullable<System.DateTime> _ngayTaoThe;
		
		private EntityRef<DocGia> _DocGia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaDocGiaChanging(int value);
    partial void OnmaDocGiaChanged();
    partial void OnngayTaoTheChanging(System.Nullable<System.DateTime> value);
    partial void OnngayTaoTheChanged();
    #endregion
		
		public TheDocGia()
		{
			this._DocGia = default(EntityRef<DocGia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDocGia", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maDocGia
		{
			get
			{
				return this._maDocGia;
			}
			set
			{
				if ((this._maDocGia != value))
				{
					if (this._DocGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaDocGiaChanging(value);
					this.SendPropertyChanging();
					this._maDocGia = value;
					this.SendPropertyChanged("maDocGia");
					this.OnmaDocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayTaoThe", DbType="Date")]
		public System.Nullable<System.DateTime> ngayTaoThe
		{
			get
			{
				return this._ngayTaoThe;
			}
			set
			{
				if ((this._ngayTaoThe != value))
				{
					this.OnngayTaoTheChanging(value);
					this.SendPropertyChanging();
					this._ngayTaoThe = value;
					this.SendPropertyChanged("ngayTaoThe");
					this.OnngayTaoTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocGia_TheDocGia", Storage="_DocGia", ThisKey="maDocGia", OtherKey="maDocGia", IsForeignKey=true)]
		public DocGia DocGia
		{
			get
			{
				return this._DocGia.Entity;
			}
			set
			{
				DocGia previousValue = this._DocGia.Entity;
				if (((previousValue != value) 
							|| (this._DocGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocGia.Entity = null;
						previousValue.TheDocGia = null;
					}
					this._DocGia.Entity = value;
					if ((value != null))
					{
						value.TheDocGia = this;
						this._maDocGia = value.maDocGia;
					}
					else
					{
						this._maDocGia = default(int);
					}
					this.SendPropertyChanged("DocGia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThuThu")]
	public partial class ThuThu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maThuThu;
		
		private string _tenThuThu;
		
		private string _taiKhoan;
		
		private string _matKhau;
		
		private System.Nullable<bool> _hide;
		
		private EntitySet<PhieuMuon> _PhieuMuons;
		
		private EntitySet<PhieuTra> _PhieuTras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaThuThuChanging(int value);
    partial void OnmaThuThuChanged();
    partial void OntenThuThuChanging(string value);
    partial void OntenThuThuChanged();
    partial void OntaiKhoanChanging(string value);
    partial void OntaiKhoanChanged();
    partial void OnmatKhauChanging(string value);
    partial void OnmatKhauChanged();
    partial void OnhideChanging(System.Nullable<bool> value);
    partial void OnhideChanged();
    #endregion
		
		public ThuThu()
		{
			this._PhieuMuons = new EntitySet<PhieuMuon>(new Action<PhieuMuon>(this.attach_PhieuMuons), new Action<PhieuMuon>(this.detach_PhieuMuons));
			this._PhieuTras = new EntitySet<PhieuTra>(new Action<PhieuTra>(this.attach_PhieuTras), new Action<PhieuTra>(this.detach_PhieuTras));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maThuThu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maThuThu
		{
			get
			{
				return this._maThuThu;
			}
			set
			{
				if ((this._maThuThu != value))
				{
					this.OnmaThuThuChanging(value);
					this.SendPropertyChanging();
					this._maThuThu = value;
					this.SendPropertyChanged("maThuThu");
					this.OnmaThuThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenThuThu", DbType="NVarChar(250)")]
		public string tenThuThu
		{
			get
			{
				return this._tenThuThu;
			}
			set
			{
				if ((this._tenThuThu != value))
				{
					this.OntenThuThuChanging(value);
					this.SendPropertyChanging();
					this._tenThuThu = value;
					this.SendPropertyChanged("tenThuThu");
					this.OntenThuThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taiKhoan", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string taiKhoan
		{
			get
			{
				return this._taiKhoan;
			}
			set
			{
				if ((this._taiKhoan != value))
				{
					this.OntaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._taiKhoan = value;
					this.SendPropertyChanged("taiKhoan");
					this.OntaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matKhau", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string matKhau
		{
			get
			{
				return this._matKhau;
			}
			set
			{
				if ((this._matKhau != value))
				{
					this.OnmatKhauChanging(value);
					this.SendPropertyChanging();
					this._matKhau = value;
					this.SendPropertyChanged("matKhau");
					this.OnmatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hide", DbType="Bit")]
		public System.Nullable<bool> hide
		{
			get
			{
				return this._hide;
			}
			set
			{
				if ((this._hide != value))
				{
					this.OnhideChanging(value);
					this.SendPropertyChanging();
					this._hide = value;
					this.SendPropertyChanged("hide");
					this.OnhideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuThu_PhieuMuon", Storage="_PhieuMuons", ThisKey="maThuThu", OtherKey="maThuThu")]
		public EntitySet<PhieuMuon> PhieuMuons
		{
			get
			{
				return this._PhieuMuons;
			}
			set
			{
				this._PhieuMuons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuThu_PhieuTra", Storage="_PhieuTras", ThisKey="maThuThu", OtherKey="maThuThu")]
		public EntitySet<PhieuTra> PhieuTras
		{
			get
			{
				return this._PhieuTras;
			}
			set
			{
				this._PhieuTras.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.ThuThu = this;
		}
		
		private void detach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.ThuThu = null;
		}
		
		private void attach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.ThuThu = this;
		}
		
		private void detach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.ThuThu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XacNhanHuyThe")]
	public partial class XacNhanHuyThe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maDocGia;
		
		private System.Nullable<System.DateTime> _ngayMoLai;
		
		private EntityRef<DocGia> _DocGia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaDocGiaChanging(int value);
    partial void OnmaDocGiaChanged();
    partial void OnngayMoLaiChanging(System.Nullable<System.DateTime> value);
    partial void OnngayMoLaiChanged();
    #endregion
		
		public XacNhanHuyThe()
		{
			this._DocGia = default(EntityRef<DocGia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDocGia", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maDocGia
		{
			get
			{
				return this._maDocGia;
			}
			set
			{
				if ((this._maDocGia != value))
				{
					if (this._DocGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaDocGiaChanging(value);
					this.SendPropertyChanging();
					this._maDocGia = value;
					this.SendPropertyChanged("maDocGia");
					this.OnmaDocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayMoLai", DbType="Date")]
		public System.Nullable<System.DateTime> ngayMoLai
		{
			get
			{
				return this._ngayMoLai;
			}
			set
			{
				if ((this._ngayMoLai != value))
				{
					this.OnngayMoLaiChanging(value);
					this.SendPropertyChanging();
					this._ngayMoLai = value;
					this.SendPropertyChanged("ngayMoLai");
					this.OnngayMoLaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocGia_XacNhanHuyThe", Storage="_DocGia", ThisKey="maDocGia", OtherKey="maDocGia", IsForeignKey=true)]
		public DocGia DocGia
		{
			get
			{
				return this._DocGia.Entity;
			}
			set
			{
				DocGia previousValue = this._DocGia.Entity;
				if (((previousValue != value) 
							|| (this._DocGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocGia.Entity = null;
						previousValue.XacNhanHuyThe = null;
					}
					this._DocGia.Entity = value;
					if ((value != null))
					{
						value.XacNhanHuyThe = this;
						this._maDocGia = value.maDocGia;
					}
					else
					{
						this._maDocGia = default(int);
					}
					this.SendPropertyChanged("DocGia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
